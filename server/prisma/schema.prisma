generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model equipment {
  id               Int       @id @default(autoincrement())
  equipment_id     String    @unique
  name             String
  qty              Int
  purchase_year_Id Int?
  model            String?
  status           String
  room             String
  categoryId       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  category         category? @relation(fields: [categoryId], references: [category_id])
  years            years?    @relation(fields: [purchase_year_Id], references: [id])

  @@index([categoryId], map: "equipment_categoryId_fkey")
  @@index([purchase_year_Id], map: "equipment_purchase_year_Id_fkey")
}

model years {
  id        Int         @id @default(autoincrement())
  years     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @default(now()) @updatedAt @db.Timestamp(0)
  equipment equipment[]
}

model category {
  category_name String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  category_id   String      @id @default(cuid())
  equipment     equipment[]
}

model students {
  id                Int             @id @default(autoincrement())
  email             String          @unique
  education_yearsId Int
  student_id        String
  title             String
  full_name         String
  nick_name         String?
  birthdate         DateTime?
  gender            String
  phone             String
  password          String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime?       @default(now()) @updatedAt @db.Timestamp(0)
  education_years   education_years @relation(fields: [education_yearsId], references: [id])

  @@index([education_yearsId], map: "students_education_yearsId_fkey")
}

model education_years {
  id        Int        @id @default(autoincrement())
  year_name String
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @default(now()) @updatedAt @db.Timestamp(0)
  students  students[]
}
